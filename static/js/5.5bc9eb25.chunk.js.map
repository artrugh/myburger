{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ing","style","textTransform","display","margin","border","padding","key","className","classes","price","toFixed","withErrorHandler","orders","useSelector","state","order","loading","token","auth","userId","dispatch","useDispatch","onFetchOrders","useCallback","actions","useEffect","orderList","Spinner","id","axios"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sGCIX,SAASC,EAAMC,GAE1B,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKlC,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GAAG,OACzC,0BACIC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAIJ,MAAOI,EAAIJ,KARxB,KAQgCI,EAAIH,OARpC,QAWJ,OACI,yBAAKW,UAAWC,IAAQlB,OACpB,2CAAiBO,GACjB,oCACI,gCAASN,EAAMkB,MAAMC,QAAQ,GAA7B,a,mBCtBDC,uBAAiB,WAExB,IAAMC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMH,UAC1CI,EAAUH,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,WAC3CC,EAAQJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,KAAKD,SACxCE,EAASN,aAAY,SAAAC,GAAK,OAAIA,EAAMI,KAAKC,UAEzCC,EAAWC,cACXC,EAAgBC,uBAAY,SAACN,EAAOE,GAAR,OAAmBC,EAASI,IAAoBP,EAAOE,MAAU,CAACC,IAEpGK,qBAAU,WACNH,EAAcL,EAAOE,KACtB,CAACG,EAAeL,EAAOE,IAE1B,IAAIO,EAAY,kBAACC,EAAA,EAAD,MAQhB,OAPKX,IAASU,EACVd,EAAOd,KAAI,SAAAiB,GAAK,OACZ,kBAACzB,EAAD,CACIgB,IAAKS,EAAMa,GACXpC,YAAauB,EAAMvB,YACnBiB,OAASM,EAAMN,YAEpB,6BAAMiB,KAEdG","file":"static/js/5.5bc9eb25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react'\n\n// STYLE\nimport classes from './Order.module.css'\n\nexport default function Order(props) {\n\n    const ingredients = []\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        })\n    }\n\n    // INGREDIENTS FROM EACH ORDER\n    const ingredientsOutput = ingredients.map(ing => (\n        <span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ing.name}>{ing.name} ({ing.amount})</span>\n    ))\n    \n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price:\n                <strong>{props.price.toFixed(2)} â‚¬</strong>\n            </p>\n        </div>\n    )\n}\n","import React, { useEffect, useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport axios from './../../axios-orders'\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler'\n\nimport Order from './../../components/Order/Order'\nimport Spinner from './../../components/UI/Spinner/Spinner'\n\nimport * as actions from './../../store/actions/'\n\nexport default withErrorHandler(function Orders() {\n\n        const orders = useSelector(state => state.order.orders)\n        const loading = useSelector(state => state.order.loading)\n        const token = useSelector(state => state.auth.token)\n        const userId = useSelector(state => state.auth.userId)\n        \n        const dispatch = useDispatch();\n        const onFetchOrders = useCallback((token, userId) => dispatch(actions.fetchOrders(token, userId)), [dispatch])\n\n        useEffect(() => {\n            onFetchOrders(token, userId)\n        }, [onFetchOrders, token, userId])\n\n        let orderList = <Spinner />\n        if (!loading) orderList =\n            orders.map(order =>\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={+ order.price} />)\n\n        return <div>{orderList}</div>\n\n    }, axios)\n"],"sourceRoot":""}