{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ing","style","textTransform","display","margin","border","padding","key","className","classes","price","toFixed","connect","state","orders","order","loading","token","auth","userId","dispatch","onFetchOrders","actions","withErrorHandler","this","Spinner","id","Component","axios"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sICGX,SAASC,EAAMC,GAE1B,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAE7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAoBL,EAAYM,KAAI,SAAAC,GACtC,OACI,0BACIC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAIJ,MAAOI,EAAIJ,KARxB,KAQgCI,EAAIH,OARpC,QAWR,OACI,yBAAKW,UAAWC,IAAQlB,OACpB,2CAAiBO,GACjB,qCAAU,gCAASN,EAAMkB,MAAMC,QAAQ,GAA7B,a,mBCTPC,uBAXS,SAAAC,GAAK,MAAK,CAC9BC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,WAGI,SAAAC,GAAQ,MAAK,CACpCC,cAAe,SAACJ,EAAOE,GAAR,OAAmBC,EAASE,IAAoBL,EAAOE,QAG3DP,CACVW,YAAgB,kLAGTC,KAAKhC,MAAM6B,cAAcG,KAAKhC,MAAMyB,MAAOO,KAAKhC,MAAM2B,UAH7C,+BAMT,IAAIL,EAAS,kBAACW,EAAA,EAAD,MAQb,OAPKD,KAAKhC,MAAMwB,UAASF,EACrBU,KAAKhC,MAAMsB,OAAOf,KAAI,SAAAgB,GAAK,OACvB,kBAACxB,EAAD,CACIgB,IAAKQ,EAAMW,GACXjC,YAAasB,EAAMtB,YACnBiB,OAASK,EAAML,YAEpB,6BAAMI,OAdJ,GAAsBa,aAgBpCC","file":"static/js/5.7a4cf4d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react'\n\nimport classes from './Order.module.css'\n\nexport default function Order(props) {\n\n    const ingredients = []\n\n    for (let ingredientName in props.ingredients) {\n        \n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        })\n    }\n\n    const ingredientsOutput = ingredients.map(ing => {\n        return (\n            <span\n                style={{\n                    textTransform: 'capitalize',\n                    display: 'inline-block',\n                    margin: '0 8px',\n                    border: '1px solid #ccc',\n                    padding: '5px'\n                }}\n                key={ing.name}>{ing.name} ({ing.amount})</span>\n        )\n    })\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientsOutput}</p>\n            <p>Price: <strong>{props.price.toFixed(2)} â‚¬</strong></p>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport axios from './../../axios-orders'\nimport withErrorHandler from './../../hoc/withErrorHandler/withErrorHandler'\n\nimport Order from './../../components/Order/Order'\nimport Spinner from './../../components/UI/Spinner/Spinner'\n\nimport * as actions from './../../store/actions/'\n\n\nconst mapStateToProps = state => ({\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)\n    (withErrorHandler(class Orders extends Component {\n\n        componentDidMount() {\n            this.props.onFetchOrders(this.props.token, this.props.userId)\n        }\n        render() {\n            let orders = <Spinner />\n            if (!this.props.loading) orders =\n                this.props.orders.map(order =>\n                    <Order\n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={+ order.price} />)\n\n            return <div>{orders}</div>\n        }\n    }, axios))\n"],"sourceRoot":""}